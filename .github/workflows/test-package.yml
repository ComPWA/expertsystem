name: Test Python package

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  documentation:
    name: Test documentation
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        python-version: [3.7]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[doc]
          sudo apt-get -y install pandoc
      - name: Check external links
        working-directory: docs
        run: |
          make linkcheck
      - name: Build documentation and run notebooks
        working-directory: docs
        env:
          NBSPHINX_EXECUTE: YES
        run: |
          make html

  style:
    name: Check style
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        python-version: [3.7]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[dev]
          sudo npm install -g cspell
      - name: Perform style checks
        run: |
          tox -e sty
          cspell $(git ls-files)

  pytest:
    name: Runtime tests (pytest)
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04, macos-10.15]
        python-version: [3.7, 3.8]
        exclude:
          - os: macos-10.15
            python-version: 3.8
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[test]
      - name: Test with pytest
        run: |
          pytest --cov=expertsystem
      - name: Upload test coverage
        uses: actions/upload-artifact@v2
        with:
          name: coverage
          path: .coverage
